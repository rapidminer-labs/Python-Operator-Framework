<?xml version="1.0" encoding="UTF-8"?>
<model name="SGDRegressor">
	<parameter name="loss" is_keyword="true">
		<description>Loss function to be used.</description>
		<type>string</type>
		<value>squared_loss</value>
		<value>huber</value>
		<value>epsilon_insensitive</value>
		<value>squared_epsilon_insensitive</value>
		<default>squared_loss</default>
	</parameter>
	<parameter name="epsilon" parent="loss" is_keyword="true">
		<description>Epsilon in the epsilon-insensitive loss functions.</description>
		<activation_value>huber</activation_value>
		<activation_value>epsilon_insensitive</activation_value>
		<activation_value>squared_epsilon_insensitive</activation_value>
		<type>float</type>
		<min>0</min>
		<max>Double.POSITIVE_INFINITY</max>
		<default>0.01</default>
	</parameter>
	<parameter name="penalty" is_keyword="true">
		<description>The penalty to be used.</description>
		<type>string</type>
		<value>none</value>
		<value>l2</value>
		<value>l1</value>
		<value>elasticnet</value>
		<default>l2</default>
	</parameter>
	<parameter name="alpha" is_keyword="true">
		<description>Constant that multiplies the regularization term.</description>
		<type>float</type>
		<min>0</min>
		<max>Double.POSITIVE_INFINITY</max>
		<default>0.0001</default>
	</parameter>
	<parameter name="l1_ratio" is_keyword="true">
		<description>Elastic net mixing parameter.</description>
		<type>float</type>
		<min>0</min>
		<max>1</max>
		<default>0.15</default>
	</parameter>
	<parameter name="fit_intercept" is_keyword="true">
		<description>Whether the intercept should be estimated or not. If False, the data is assumed to be already centered.</description>
		<type>bool</type>
		<default>True</default>
	</parameter>
	<parameter name="max_iter" is_keyword="true">
		<description>The maximum number of passes over the training data (aka epochs).</description>
		<type>int</type>
		<min>1</min>
		<max>Integer.MAX_VALUE</max>
		<default>5</default>
	</parameter>
	<parameter name="shuffle" is_keyword="true">
		<description>Whether the training data should be shuffled after each epoch.</description>
		<type>bool</type>
		<default>False</default>
	</parameter>
	<parameter name="verbose" is_keyword="true">
		<description>Verbosity level.</description>
		<type>int</type>
		<min>0</min>
		<max>Integer.MAX_VALUE</max>
		<default>0</default>
	</parameter>
	<parameter name="random_state" is_keyword="true">
		<description>Seed of the pseudo random number generator to use when shuffling the data.</description>
		<type>int</type>
		<min>0</min>
		<max>Integer.MAX_VALUE</max>
		<default>0</default>
	</parameter>
	<parameter name="learning_rate" is_keyword="true">
		<description>Learning rate schedule.</description>
		<type>string</type>
		<value>constant</value>
		<value>optimal</value>
		<value>invscaling</value>
		<default>optimal</default>
	</parameter>
	<parameter name="eta0" is_keyword="true">
		<description>Initial learning rate.</description>
		<type>float</type>
		<min>0</min>
		<max>Double.POSITIVE_INFINITY</max>
		<default>0.01</default>
	</parameter>
	<parameter name="power_t" is_keyword="true">
		<description>Exponent for inverse scaling learning rate.</description>
		<type>float</type>
		<min>0</min>
		<max>Double.POSITIVE_INFINITY</max>
		<default>0.25</default>
	</parameter>
	<parameter name="warm_start" is_keyword="true">
		<description>Whether to reuse the solution of the previous call to fit as initialisation.</description>
		<type>bool</type>
		<default>True</default>
	</parameter>
	<parameter name="average" is_keyword="true">
		<description>Whether to compute the averaged SGD weights and store the result.</description>
		<type>bool</type>
		<default>True</default>
	</parameter>
</model>